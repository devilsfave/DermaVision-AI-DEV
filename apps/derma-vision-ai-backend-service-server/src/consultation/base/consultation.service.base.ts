/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Consultation as PrismaConsultation } from "@prisma/client";

export class ConsultationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ConsultationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.consultation.count(args);
  }

  async consultations(
    args: Prisma.ConsultationFindManyArgs
  ): Promise<PrismaConsultation[]> {
    return this.prisma.consultation.findMany(args);
  }
  async consultation(
    args: Prisma.ConsultationFindUniqueArgs
  ): Promise<PrismaConsultation | null> {
    return this.prisma.consultation.findUnique(args);
  }
  async createConsultation(
    args: Prisma.ConsultationCreateArgs
  ): Promise<PrismaConsultation> {
    return this.prisma.consultation.create(args);
  }
  async updateConsultation(
    args: Prisma.ConsultationUpdateArgs
  ): Promise<PrismaConsultation> {
    return this.prisma.consultation.update(args);
  }
  async deleteConsultation(
    args: Prisma.ConsultationDeleteArgs
  ): Promise<PrismaConsultation> {
    return this.prisma.consultation.delete(args);
  }
}
